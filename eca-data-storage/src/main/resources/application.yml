spring:
  application:
    name: eca-data-storage
  jmx:
    default-domain: eca-data-storage
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  ## Datasource properties
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/data_storage
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        order_by:
          default_null_ordering: last
  liquibase:
    contexts: schema,data
    change-log: classpath:db/liquibase-changelog.xml
  cache:
    cache-names: table-columns
    caffeine:
      spec: maximumSize=100, expireAfterWrite=18000s
  servlet:
    multipart:
      max-file-size: 10MB

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

ribbon:
  ReadTimeout: 60000

eca-ds:
  maxPageSize: 50
  dateFormat: yyyy-MM-dd HH:mm:ss
  batchSize: 100
  reportsPath: reports-config.json

## Swagger properties
open-api:
  basePath: /
  title: Microservice for storaging training data sets
  description: API provides operations with training data sets for ECA web application
  author: Roman Batygin
  email: roman.batygin@mail.ru
  projectVersion: @project.version@
  tokenBaseUrl: http://localhost:8080
  apiAuth:
    PASSWORD:
      scopes: web

springdoc:
  swagger-ui:
    oauth:
      client-id: swagger
      client-secret: swagger_secret
    disable-swagger-default-url: true

auth-server:
  baseUrl: http://localhost:8085/eca-oauth
  clientId: eca_web
  clientSecret: web_secret

management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

server:
  forward-headers-strategy: framework
