version: "3.5"
services:

  eca-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: eca-db
    volumes:
      - ./scripts/postgresinit.sql:/docker-entrypoint-initdb.d/postgresinit.sql
      - eca-pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - default
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TIME_ZONE}
      PGTZ: ${TIME_ZONE}

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    environment:
      TZ: ${TIME_ZONE}
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:${RABBIT_MQ_VERSION}
    container_name: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
      - rabbit-data:/var/lib/rabbitmq
    environment:
      TZ: ${TIME_ZONE}
    networks:
      - default

  s3-minio-storage:
    image: minio/minio:${MINIO_VERSION}
    container_name: s3-minio-storage
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    ports:
      - "9000:9000"
      - "9100:9100"
    volumes:
      - s3-minio-data:/data
    command: ["server", "--console-address", ":9100", "/data"]

  s3-minio-client:
    build: ./minio/mc/
    container_name: s3-minio-client
    depends_on:
      - s3-minio-storage
    environment:
      S3_MINIO_URL: ${S3_MINIO_URL}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      BUCKET_NAME: ${BUCKET_NAME}

  s3-minio-nginx-proxy:
    container_name: s3-minio-nginx-proxy
    image: nginx:${NGINX_VERSION}
    ports:
      - "8098:8098"
    volumes:
      - ./minio-proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - s3-minio-storage

  discovery-server:
    image: discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
    networks:
      - default

  eca-server:
    image: eca-server
    container_name: eca-server
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx1g"
      QUEUE_EVALUATIONREQUESTQUEUE: ${QUEUE_EVALUATION_REQUEST_QUEUE}
      QUEUE_EVALUATIONOPTIMIZERREQUESTQUEUE: ${QUEUE_EVALUATION_OPTIMIZER_REQUEST_QUEUE}
      QUEUE_EXPERIMENTREQUESTQUEUE: ${QUEUE_EXPERIMENT_REQUEST_QUEUE}
      SPRING_REDIS_HOST: "redis"
      SPRING_CACHE_TYPE: "redis"
      AUDIT_ENABLED: "true"
      AUDIT_ASYNCEVENTS: ${AUDIT_ASYNC_EVENTS}
      AUDIT_THREADPOOLSIZE: ${AUDIT_THREAD_POOL_SIZE}
      REDELIVERY_ENABLED: "true"
      OPENAPI_BASEPATH: "/eca-server"
    networks:
      - default
    depends_on:
      - eca-db
      - rabbitmq
      - discovery-server

  eca-oauth:
    image: eca-oauth
    container_name: eca-oauth
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx756m"
      AUDIT_ENABLED: "true"
      AUDIT_ASYNCEVENTS: ${AUDIT_ASYNC_EVENTS}
      AUDIT_THREADPOOLSIZE: ${AUDIT_THREAD_POOL_SIZE}
      REDELIVERY_ENABLED: "true"
      OPENAPI_BASEPATH: "/eca-oauth"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

  eca-mail:
    image: eca-mail
    container_name: eca-mail
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
      OPENAPI_BASEPATH: "/eca-mail"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

  eca-data-storage:
    image: eca-data-storage
    container_name: eca-data-storage
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
      AUDIT_ENABLED: "true"
      AUDIT_ASYNCEVENTS: ${AUDIT_ASYNC_EVENTS}
      AUDIT_THREADPOOLSIZE: ${AUDIT_THREAD_POOL_SIZE}
      REDELIVERY_ENABLED: "true"
      OPENAPI_BASEPATH: "/eca-ds"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

  eca-ers:
    image: eca-ers
    container_name: eca-ers
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx1g"
      OPENAPI_BASEPATH: "/eca-ers"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

  eca-web:
    image: eca-web
    container_name: eca-web
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
    networks:
      - default
    depends_on:
      - eca-server
      - discovery-server

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx756m"
    ports:
      - "8080:8080"
    networks:
      - default
    depends_on:
      - discovery-server

  eca-web-push:
    image: eca-web-push
    container_name: eca-web-push
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
      OPENAPI_BASEPATH: "/eca-web-push"
    networks:
      - default

  eca-audit-log:
    image: eca-audit-log
    container_name: eca-audit-log
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
      OPENAPI_BASEPATH: "/eca-audit-log"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

  eca-data-loader:
    image: eca-data-loader
    container_name: eca-data-loader
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: "docker"
      JAVA_OPTS: "-Xmx512m"
      OPENAPI_BASEPATH: "/eca-data-loader"
    networks:
      - default
    depends_on:
      - eca-db
      - discovery-server

networks:
  default:
    name: app-network
    driver: bridge

volumes:
  eca-pgdata:
    name: eca-pgdata
  rabbit-data:
    name: rabbit-data
  s3-minio-data:
    name: s3-minio-data
