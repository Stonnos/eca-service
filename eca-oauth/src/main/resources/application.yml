spring:
  application:
    name: eca-oauth
  ## Datasource properties
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/eca_oauth
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  liquibase:
    contexts: schema,data
    change-log: classpath:db/liquibase-changelog.xml
  cache:
    cache-names: global-filters, filter-templates, filter-dictionaries, sort-fields
    caffeine:
      spec: maximumSize=100, expireAfterWrite=18000s
  servlet:
    multipart:
      max-file-size: 10MB

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

lock:
  enabled: true

## Application properties
app:
  webExternalBaseUrl: http://localhost:8085
  validUserPhotoFileExtensions: png, jpg, jpeg, gif
  resetPassword:
    validityMinutes: 15
    url: /reset-password/?token=%s
  changePassword:
    validityMinutes: 15
  changeEmail:
    validityMinutes: 2880

mail:
  client:
    async: true
    threadPoolSize: 3
    encrypt:
      enabled: true
      password: pa66word!
      salt: s@lt#

## Password generator configs
password:
  length: 12

tfa:
  codeValiditySeconds: 120
  codeLength: 6
  enabled: true

userProfile:
  emailEnabled: true
  webPushEnabled: true
  notificationEventOptions:
    - eventType: EXPERIMENT_STATUS_CHANGE
      emailEnabled: true
      webPushEnabled: true
      emailSupported: true
      webPushSupported: true
    - eventType: CLASSIFIER_STATUS_CHANGE
      emailEnabled: false
      webPushEnabled: true
      emailSupported: false
      webPushSupported: true
    - eventType: CLASSIFIER_CONFIGURATION_CHANGE
      emailEnabled: false
      webPushEnabled: true
      emailSupported: false
      webPushSupported: true
  dataEventRetryIntervalSeconds: 30
  rabbit:
    exchangeName: user-profile-options-exchange

table:
  data:
    clean:
      enabled: true
      tables:
        - tableName: tfa_code
          creationTimestampColumnName: created
          storagePeriodInDays: 1
        - tableName: reset_password_request
          creationTimestampColumnName: created
          storagePeriodInDays: 30
        - tableName: change_password_request
          creationTimestampColumnName: created
          storagePeriodInDays: 30
        - tableName: change_email_request
          creationTimestampColumnName: created
          storagePeriodInDays: 30

## Swagger properties
open-api:
  basePath: /
  title: Microservice for users managment
  description: API provides operations with users for ECA web application
  author: Roman Batygin
  email: roman.batygin@mail.ru
  projectVersion: @project.version@
  tokenBaseUrl: http://localhost:8080
  apiAuth:
    PASSWORD:
      scopes: web
    CLIENT_CREDENTIALS:
      scopes: internal-api

springdoc:
  packages-to-exclude: org.springframework.security.oauth2.provider.endpoint
  swagger-ui:
    oauth:
      client-id: swagger
      client-secret: swagger_secret
    disable-swagger-default-url: true

management:
  tracing:
    enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  info:
    git:
      enabled: true
      mode: full

server:
  forward-headers-strategy: framework
