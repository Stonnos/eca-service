<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>eca-service</artifactId>
        <groupId>eca.service</groupId>
        <version>6.3</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>eca-web</artifactId>
    <packaging>war</packaging>

    <properties>
        <frontend-maven-plugin.version>1.9.0</frontend-maven-plugin.version>
        <typescript-generator-maven-plugin.version>2.5.423</typescript-generator-maven-plugin.version>
        <node.version>v12.14.1</node.version>
        <npm.version>6.13.4</npm.version>
        <sonar.coverage.exclusions>**/*.*</sonar.coverage.exclusions>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <npm.env></npm.env>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <npm.env>-prod</npm.env>
            </properties>
        </profile>
    </profiles>

    <dependencies>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>eca.service</groupId>
            <artifactId>common-web</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eca.service</groupId>
            <artifactId>eca-web-transport</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eca.service</groupId>
            <artifactId>oauth2-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eca.service</groupId>
            <artifactId>swagger-core</artifactId>
            <version>${project.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>application.yml</include>
                    <include>application-docker.yml</include>
                    <include>application-docker-prod.yml</include>
                    <include>logback-spring.xml</include>
                    <include>menu-bar.json</include>
                    <include>openApiExamples/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/dist/resources</directory>
                <targetPath>static</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <offline>true</offline>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>

                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
                    <workingDirectory>src/main/resources</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>npm rebuild sass</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <configuration>
                            <arguments>rebuild node-sass</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <configuration>
                            <arguments>run build${npm.env}
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--TypeScript Generator-->
            <plugin>
                <groupId>cz.habarta.typescript-generator</groupId>
                <artifactId>typescript-generator-maven-plugin</artifactId>
                <version>${typescript-generator-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
                <configuration>
                    <jsonLibrary>jackson2</jsonLibrary>
                    <classPatterns>
                        <pattern>com.ecaservice.common.web.dto.**</pattern>
                        <pattern>com.ecaservice.web.dto.model.**</pattern>
                    </classPatterns>
                    <outputFile>${project.build.directory}/generated-sources/typescript/eca-web-dto.ts</outputFile>
                    <outputFileType>implementationFile</outputFileType>
                    <outputKind>module</outputKind>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <inherited>false</inherited>
                <configuration>
                    <skip>false</skip>
                    <repository>${project.artifactId}</repository>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
